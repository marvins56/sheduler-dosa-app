@model IPagedList<sheduler.Models.Event>
@using PagedList.Mvc;
@using PagedList;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Myshedules";
}

@if (TempData["error"] != null)
{
    <script>
     swal({
        title: "ERROR",
  text: "@TempData["error"]",
  icon: "error"
        });
    </script>
}
else
{
<div class="container-xxl flex-grow-1 container-p-y">
    <div class="mb-3 col-12 mb-0">
        <div class="alert alert-warning">
            <h6 class="alert-heading fw-bold mb-1"> NOTE:</h6>
            <p class="mb-0">
                To sort in diffrent areas like sort all descriptions to descending or assending plus dates inclusive, kindly click on the headers to sort
            </p>
        </div>
    </div>
    @using (Html.BeginForm())

    {<nav class="layout-navbar  mb-3 container-xxl navbar navbar-expand-xl navbar-detached align-items-center bg-navbar-theme"
          id="layout-navbar">

            @*<div class=" align-items-center" id="navbar-collapse">*@
            <div class="navbar-nav align-items-center">
                <div class="nav-item d-flex align-items-center">
                    <button type="submit" class="btn btn-light">
                        <i class="bx bx-search fs-4 lh-0"></i>
                    </button>
                    <input type="text"
                           class="form-control border-0 shadow-none"
                           placeholder="Search..."
                           aria-label="Search..." name="SearchString" style="width:100%" />

                </div>
            </div>
            @*</div>*@
        </nav>

    }
    <!-- Hoverable Table rows -->


<div class="card mb-4">
    <div class="table-responsive text-wrap">
        <table class="table table-hover  " style="width:100%">
            <thead>
                <h3 class="text-center mt-3"> MY SHEDULES</h3>
                <tr>
                    <th>
                        <button type="button"
                                class="btn btn-light text-black w-100"
                                data-bs-toggle="tooltip"
                                data-bs-offset="0,4"
                                data-bs-placement="top"
                                data-bs-html="true"
                                title=" </i><span>STUDENT </span>">
                            USER
                        </button>
                    </th>
                    <th>
                        <button type="button"
                                class="btn btn-light text-black"
                                data-bs-toggle="tooltip"
                                data-bs-offset="0,4"
                                data-bs-placement="top"
                                data-bs-html="true"
                                title=" </i><span> SORT BY DESCRIPTION</span>">
                            @Html.ActionLink("DESCRIPTION", "Myshedules", new { sortOrder = ViewBag.eventdescription })

                        </button>
                    </th>
                    <th>
                        <button type="button"
                                class="btn btn-light text-black"
                                data-bs-toggle="tooltip"
                                data-bs-offset="0,4"
                                data-bs-placement="top"
                                data-bs-html="true"
                                title=" </i><span> SORT BY DATETIME </span>">
                            @Html.ActionLink("START TIME ", "Myshedules", new { sortOrder = ViewBag.Date })

                        </button>

                    </th>
                    <th>

                        <button type="button"
                                class="btn btn-light text-black w-100"
                                data-bs-toggle="tooltip"
                                data-bs-offset="0,4"
                                data-bs-placement="top"
                                data-bs-html="true"
                                title=" </i><span> EXECTED ARRIVAL IN </span>">
                            ARRIVAL DATE
                        </button>

                    </th>
                    <th>
                        <button type="button"
                                class="btn btn-light text-black w-100"
                                data-bs-toggle="tooltip"
                                data-bs-offset="0,4"
                                data-bs-placement="top"
                                data-bs-html="true"
                                title=" </i><span> DAY DURATION </span>">
                            DAY DURATION
                        </button>
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody class="table-border-bottom-0">
                @foreach (var item in Model)
                {
                    <tr class="">
                        <td style="width:10%;">
                            @Html.DisplayFor(modelItem => item.userid)
                        </td>

                        <td style="width:50%; word-wrap:break-word;">
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td style="width:10%;">
                            @Html.DisplayFor(modelItem => item.Start.Date)
                        </td>
                        <td>
                            @{
                                var timer = @Html.DisplayFor(modelItem => item.End);
                            }
                            <a href="https://logwork.com/countdown-7k4v" class="countdown-timer text-primary" data-style="circles" data-textcolor="#39574c" data-timezone="Africa/Kampala" data-date=@timer>c</a>

                        </td>

                        <td  style="width:20%;">
                            @if (item.IsFullDay == true)
                            {
                                <button class="btn btn-outline-success"> Fullday</button>

                            }
                            else
                            {
                                <button class="btn btn-outline-warning"> Given time</button>
                            }
                        </td>

                    </tr>
                }

            </tbody>
        </table>
    </div>
    <div class="text-center">

        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Myshedules", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

    </div>
</div>
   
</div>
}


